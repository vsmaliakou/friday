{"version":3,"sources":["main/ui/common/c1-SuperInputText/SuperInputText.module.css","main/ui/common/c2-SuperButton/SuperButton.module.css","main/ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","main/ui/header/Header.module.css","main/ui/components/test/Test.module.css","main/ui/common/links.tsx","main/ui/header/Header.tsx","main/ui/components/auth/login/Login.tsx","main/ui/components/auth/register/Register.tsx","main/ui/components/profile/Profile.tsx","main/ui/components/auth/forgotPassword/ForgotPassword.tsx","main/ui/components/auth/setPassword/SetPassword.tsx","main/ui/common/c1-SuperInputText/SuperInputText.tsx","main/ui/common/c2-SuperButton/SuperButton.tsx","main/ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","main/ui/components/test/Test.tsx","App.tsx","reportWebVitals.ts","main/bll/reducers/login-reducer.ts","main/bll/reducers/register-reducer.ts","main/bll/reducers/profile-reducer.ts","main/bll/reducers/forgotPassword-reducer.ts","main/bll/reducers/setPassword-reducer.ts","main/bll/store.ts","index.tsx"],"names":["module","exports","login","to","registration","forgot","newPassword","profile","test","Header","className","style","header","Login","Register","Profile","ForgotPassword","SetPassword","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","setError","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","button_red","button_default","SuperCheckbox","onChangeChecked","children","checkbox","checked","Test","x","App","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loginReducer","state","action","registerReducer","profileReducer","forgotPasswordReducer","setPasswordReducer","rootReducer","combineReducers","register","forgotPassword","setPassword","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d274c29b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__14p60\",\"errorInput\":\"SuperInputText_errorInput__10Y1w\",\"error\":\"SuperInputText_error__1GE1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_default\":\"SuperButton_button_default__1elDc\",\"button_red\":\"SuperButton_button_red__20V7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3cnHt\",\"spanClassName\":\"SuperCheckbox_spanClassName__1v74u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__p-D8N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"Test_test__1U8SE\"};","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const login = <Link to='/login'>Login</Link>\r\nexport const registration = <Link to='/registration'>Registration</Link>\r\nexport const forgot = <Link to='/forgot'>Password recovery</Link>\r\nexport const newPassword = <Link to='/new-password'>New password</Link>\r\nexport const profile = <Link to='/profile'>Profile</Link>\r\nexport const test = <Link to='/test'>Test</Link>","import React from \"react\";\r\nimport style from './Header.module.css'\r\nimport {forgot, login, newPassword, profile, registration, test} from \"../common/links\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={style.header}>\r\n            {login}\r\n            {registration}\r\n            {forgot}\r\n            {newPassword}\r\n            {profile}\r\n            {test}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div>\r\n            Login\r\n            {/* test commit */}\r\n            sadfvadfasdrasifagrfi\r\n\r\n            ВАВЫЗАЛШВЫОАВЩЫАЩВЫИОЩЫОАВЩЫ\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Register = () => {\r\n    return (\r\n        <div>\r\n            Registration\r\n            {/*test commit*/}\r\n            TEST2\r\n            Test3\r\n            <h1>Привет Алексей</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const ForgotPassword = () => {\r\n    return (\r\n        <div>\r\n            <h1>11</h1>\r\n            Password recovery\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const SetPassword = () => {\r\n    return (\r\n        <div>\r\n            Entering a new password\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n    setError: (value: string | null) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error, setError,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n        // setError(\"\")\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error ? <span className={finalSpanClassName}>{error}</span> : <span className={finalSpanClassName}></span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    error?: string|null\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        error, red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${error ? s.button_red : s.button_default}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React from 'react';\r\nimport style from './Test.module.css'\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div className={style.test}>\r\n            <div><SuperInputText setError={x => x}/></div>\r\n            <div><SuperButton/></div>\r\n            <div><SuperCheckbox/></div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from \"./main/ui/header/Header\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport {Login} from \"./main/ui/components/auth/login/Login\";\nimport {Register} from \"./main/ui/components/auth/register/Register\";\nimport {Profile} from \"./main/ui/components/profile/Profile\";\nimport {ForgotPassword} from \"./main/ui/components/auth/forgotPassword/ForgotPassword\";\nimport {SetPassword} from \"./main/ui/components/auth/setPassword/SetPassword\";\nimport {Test} from \"./main/ui/components/test/Test\";\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <div className=\"App-content\">\n                <Switch>\n                    <Route path='/login' render={() => <Login/>}/>\n                    <Route path='/registration' render={() => <Register/>}/>\n                    <Route path='/profile' render={() => <Profile/>}/>\n                    <Route path='/forgot' render={() => <ForgotPassword/>}/>\n                    <Route path='/new-password' render={() => <SetPassword/>}/>\n                    <Route path='/test' render={() => <Test/>}/>\n                    <Route path='/404' render={() => <div>404 PAGE NOT FOUND</div>}/>\n                    <Route path='*' render={() => <Redirect to={'/404'}/>}/>\n                </Switch>\n            </div>\n        </div>\n    );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export type LoginActionType = ReturnType<typeof loginAC>\r\nexport type LoginInitialStateType = typeof initialState\r\n\r\nlet initialState = {}\r\n\r\nconst loginReducer = (state = initialState, action: LoginActionType): LoginInitialStateType => {\r\n    switch (action.type) {\r\n        case '':\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const loginAC = () => ({type: ''} as const)\r\n\r\nexport default loginReducer\r\n","export type RegisterActionType = ReturnType<typeof registerAC>\r\nexport type RegisterInitialStateType = typeof initialState\r\n\r\nlet initialState = {}\r\n\r\nconst registerReducer = (state = initialState, action: RegisterActionType): RegisterInitialStateType => {\r\n    switch (action.type) {\r\n        case '':\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const registerAC = () => ({type: ''} as const)\r\n\r\nexport default registerReducer\r\n","export type ProfileActionType = ReturnType<typeof profileAC>\r\nexport type ProfileInitialStateType = typeof initialState\r\n\r\nlet initialState = {}\r\n\r\nconst profileReducer = (state = initialState, action: ProfileActionType): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case '':\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const profileAC = () => ({type: ''} as const)\r\n\r\nexport default profileReducer\r\n","export type ForgotPasswordActionType = ReturnType<typeof forgotPasswordAC>\r\nexport type ForgotPasswordInitialStateType = typeof initialState\r\n\r\nlet initialState = {}\r\n\r\nconst forgotPasswordReducer = (state = initialState, action: ForgotPasswordActionType): ForgotPasswordInitialStateType => {\r\n    switch (action.type) {\r\n        case '':\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const forgotPasswordAC = () => ({type: ''} as const)\r\n\r\nexport default forgotPasswordReducer\r\n","export type SetPasswordActionType = ReturnType<typeof setPasswordAC>\r\nexport type SetPasswordInitialStateType = typeof initialState\r\n\r\nlet initialState = {}\r\n\r\nconst setPasswordReducer = (state = initialState, action: SetPasswordActionType): SetPasswordInitialStateType => {\r\n    switch (action.type) {\r\n        case '':\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setPasswordAC = () => ({type: ''} as const)\r\n\r\nexport default setPasswordReducer\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport loginReducer, {LoginActionType} from \"./reducers/login-reducer\";\r\nimport registerReducer, {RegisterActionType} from \"./reducers/register-reducer\";\r\nimport profileReducer, {ProfileActionType} from \"./reducers/profile-reducer\";\r\nimport forgotPasswordReducer, {ForgotPasswordActionType} from \"./reducers/forgotPassword-reducer\";\r\nimport setPasswordReducer, {SetPasswordActionType} from \"./reducers/setPassword-reducer\";\r\n\r\n\r\nexport let rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    profile: profileReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    setPassword: setPasswordReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppActionsType = LoginActionType\r\n    | RegisterActionType\r\n    | ProfileActionType\r\n    | ForgotPasswordActionType\r\n    | SetPasswordActionType\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionsType>\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./main/bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}