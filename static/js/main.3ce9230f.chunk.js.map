{"version":3,"sources":["main/ui/components/auth/login/login.module.css","main/ui/common/c1-SuperInputText/SuperInputText.module.css","main/ui/common/c2-SuperButton/SuperButton.module.css","main/ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","main/ui/header/Header.module.css","main/ui/components/test/Test.module.css","main/ui/components/auth/register/RegisterPage_vit.module.css","main/ui/common/links.tsx","main/ui/header/Header.tsx","main/ui/components/profile/Profile.tsx","main/ui/components/auth/forgotPassword/ForgotPassword.tsx","main/ui/components/auth/setPassword/SetPassword.tsx","main/ui/common/c1-SuperInputText/SuperInputText.tsx","main/ui/common/c2-SuperButton/SuperButton.tsx","main/ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","main/ui/components/test/Test.tsx","main/dal/auth/register/registerAPI.ts","main/bll/reducers/register-reducer.ts","main/ui/components/auth/register/RegisterContainer.tsx","main/dal/auth/login/loginApi.ts","main/bll/reducers/login-reducer.ts","main/ui/components/auth/login/LoginContainer.tsx","App.tsx","reportWebVitals.ts","main/bll/reducers/profile-reducer.ts","main/bll/reducers/forgotPassword-reducer.ts","main/bll/reducers/setPassword-reducer.ts","main/bll/store.ts","index.tsx"],"names":["module","exports","login","to","registration","forgot","newPassword","profile","test","Header","className","style","header","Profile","ForgotPassword","SetPassword","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","setError","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","button_red","button_default","SuperCheckbox","onChangeChecked","children","checkbox","checked","Test","x","instance","axios","create","baseURL","withCredentials","headers","registerAPI","email","password","post","initialState","registrationSuccess","setErrorAC","registerReducer","state","action","RegisterContainer","useState","setEmail","setPassword","secondPassword","setSecondPassword","isChecked","setIsChek","useSelector","register","dispatch","useDispatch","history","useHistory","registerPage","placeholder","onClick","push","then","response","console","log","data","addedUser","setEmailAC","catch","setRegistrationDataTC","loginAPI","rememberMe","dataUser","errorMessage","setErrorPageAC","loginReducer","LoginContainer","setRememberMe","dataLogin","useEffect","formLogin","inputArea","newEmail","addNewPassword","rememberMeArea","newValue","linkForgot","res","message","newUserDataTC","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","profileReducer","forgotPasswordReducer","setPasswordReducer","rootReducer","combineReducers","forgotPassword","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ce9230f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLogin\":\"login_formLogin__2nN5p\",\"inputArea\":\"login_inputArea__3ihcm\",\"linkForgot\":\"login_linkForgot__3iBBQ\",\"linkRegistration\":\"login_linkRegistration__sLJ3u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__14p60\",\"errorInput\":\"SuperInputText_errorInput__10Y1w\",\"error\":\"SuperInputText_error__1GE1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_default\":\"SuperButton_button_default__1elDc\",\"button_red\":\"SuperButton_button_red__20V7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3cnHt\",\"spanClassName\":\"SuperCheckbox_spanClassName__1v74u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__p-D8N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"Test_test__1U8SE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerPage\":\"RegisterPage_vit_registerPage__1N3Fl\"};","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const login = <Link to='/login'>Login</Link>\r\nexport const registration = <Link to='/registration'>Registration</Link>\r\nexport const forgot = <Link to='/forgot'>Password recovery</Link>\r\nexport const newPassword = <Link to='/new-password'>New password</Link>\r\nexport const profile = <Link to='/profile'>Profile</Link>\r\nexport const test = <Link to='/test'>Test</Link>","import React from \"react\";\r\nimport style from './Header.module.css'\r\nimport {forgot, login, newPassword, profile, registration, test} from \"../common/links\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={style.header}>\r\n            {login}\r\n            {registration}\r\n            {forgot}\r\n            {newPassword}\r\n            {profile}\r\n            {test}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const ForgotPassword = () => {\r\n    return (\r\n        <div>\r\n            <h1>11</h1>\r\n            Password recovery\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const SetPassword = () => {\r\n    return (\r\n        <div>\r\n            Entering a new password\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n    setError: (value: string | null) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error, setError,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n        // setError(\"\")\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error ? <span className={finalSpanClassName}>{error}</span> : <span className={finalSpanClassName}></span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    error?: string|null\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        error, red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${error ? s.button_red : s.button_default}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React from 'react';\r\nimport style from './Test.module.css'\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div className={style.test}>\r\n            <div><SuperInputText setError={x => x}/></div>\r\n            <div><SuperButton/></div>\r\n            <div><SuperCheckbox/></div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n    headers: {}\r\n})\r\n\r\ntype ResponseType = {\r\n    addedUser: {\r\n        created: string\r\n        email: string\r\n        isAdmin: boolean\r\n        name: string\r\n        publicCardPacksCount: number\r\n        rememberMe: boolean\r\n        updated: string\r\n        verified: boolean\r\n        __v: number\r\n        _id: string\r\n    }\r\n    error?: string\r\n}\r\n\r\nexport const registerAPI = {\r\n    setRegisterData(email: string, password: string) {\r\n        return instance.post<ResponseType>('auth/register', {email, password})\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {registerAPI} from \"../../dal/auth/register/registerAPI\";\r\n\r\nexport type RegisterActionType = ReturnType<typeof setEmailAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setRegistrationSuccessAC>\r\nexport type RegisterInitialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    email: \"\",\r\n    error: \"\",\r\n    registrationSuccess: false\r\n}\r\n\r\nconst registerReducer = (state = initialState, action: RegisterActionType): RegisterInitialStateType => {\r\n    switch (action.type) {\r\n        case 'CARDS/REGISTER/SET-EMAIL':\r\n            return {\r\n                ...state,\r\n                email: action.email\r\n            }\r\n        case 'CARDS/REGISTER/SET-ERROR':\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        case 'CARDS/REGISTER/REGISTRATION-SUCCESS':\r\n            return {\r\n                ...state, registrationSuccess: action.registrationSuccess\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setEmailAC = (email: string) => ({type: 'CARDS/REGISTER/SET-EMAIL', email} as const)\r\nexport const setErrorAC = (error: string) => ({type: 'CARDS/REGISTER/SET-ERROR', error} as const)\r\nexport const setRegistrationSuccessAC = (registrationSuccess: boolean) => ({type: 'CARDS/REGISTER/REGISTRATION-SUCCESS', registrationSuccess} as const)\r\n\r\nexport const setRegistrationDataTC = (email: string, password: string) => (dispatch: Dispatch) => {\r\n    return registerAPI.setRegisterData(email, password)\r\n        .then(response => {\r\n            console.log(response.data.addedUser.email)\r\n            dispatch(setEmailAC(response.data.addedUser.email))\r\n            dispatch(setRegistrationSuccessAC(true))\r\n        }).catch(e => {\r\n            dispatch(setErrorAC(e.response.data.error))\r\n        })\r\n}\r\n\r\nexport default registerReducer\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setErrorAC, setRegistrationDataTC} from \"../../../../bll/reducers/register-reducer\";\r\nimport style from \"./RegisterPage_vit.module.css\";\r\nimport SuperInputText from \"../../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/c2-SuperButton/SuperButton\";\r\nimport {AppRootStateType} from \"../../../../bll/store\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\n\r\nexport const RegisterContainer = () => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [secondPassword, setSecondPassword] = useState(\"\")\r\n    const [isChecked, setIsChek] = useState(false)\r\n\r\n    const error = useSelector<AppRootStateType, string>(state => state.register.error)\r\n    const registrationSuccess = useSelector<AppRootStateType>(state => state.register.registrationSuccess)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n    const onChangeSecondPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSecondPassword(e.currentTarget.value)\r\n    }\r\n    const viewPassword = () => {\r\n        setIsChek(!isChecked)\r\n    }\r\n    const closeRegister = () => {\r\n        history.push('/login')\r\n    }\r\n\r\n    if(registrationSuccess){\r\n        return <Redirect to='/login'/>\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        if(password === secondPassword){\r\n            dispatch(setRegistrationDataTC(email, password))\r\n        }else if(!secondPassword){\r\n            dispatch(setErrorAC(\"Please fill in the confirm password field\"))\r\n        }else{\r\n            dispatch(setErrorAC(\"Passwords don't match\"))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.registerPage}>\r\n            <div>\r\n                <SuperInputText placeholder=\"email\" type={\"email\"} setError={x => x} onChange={onChangeEmail}/>\r\n            </div>\r\n            <div>\r\n                <SuperInputText placeholder=\"password\" type={isChecked ? \"text\" : \"password\"} setError={x => x} onChange={onChangePassword}/>\r\n            </div>\r\n            <div>\r\n                <SuperInputText placeholder=\"confirm password\" type={isChecked ? \"text\" : \"password\"} setError={x => x} onChange={onChangeSecondPassword}/>\r\n\r\n            </div>\r\n            <input type=\"checkbox\" onClick={viewPassword}/>view password\r\n            <div>\r\n                <SuperButton onClick={closeRegister}>cancel</SuperButton>\r\n                <SuperButton onClick={onSubmit}>sign up</SuperButton>\r\n            </div>\r\n            {error && <div>{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/', // local\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0', // heroku\r\n    withCredentials: true,\r\n    headers: {}\r\n})\r\n\r\nexport type LoginType = {\r\n    avatar?: string\r\n    created: Date\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n    updated: Date\r\n    verified: boolean\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport const loginAPI = {\r\n    postLogin(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginType>(`auth/login`, {email, password, rememberMe})\r\n    }\r\n};","import {Dispatch} from \"redux\";\r\nimport {loginAPI, LoginType} from \"../../dal/auth/login/loginApi\";\r\n\r\nexport type LoginActionType = ReturnType<typeof loginAC>\r\n    | ReturnType<typeof setErrorPageAC>\r\nexport type LoginInitialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    dataUser: null as LoginType | null,\r\n    errorMessage: ''\r\n}\r\n\r\nconst loginReducer = (state = initialState, action: LoginActionType): LoginInitialStateType => {\r\n    switch (action.type) {\r\n        case 'CARDS/LOGIN/POST-LOGIN-DATA':\r\n            return {\r\n                ...state,\r\n                dataUser: action.dataUser\r\n            }\r\n        case \"CARDS/LOGIN/SET-ERROR-MESSAGE\":\r\n            return {\r\n                ...state,\r\n                errorMessage: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const loginAC = (dataUser: LoginType) => ({\r\n    type: 'CARDS/LOGIN/POST-LOGIN-DATA',\r\n    dataUser\r\n} as const)\r\n\r\nexport const setErrorPageAC = (error: string) => ({\r\n    type: 'CARDS/LOGIN/SET-ERROR-MESSAGE',\r\n    error\r\n} as const)\r\n\r\nexport const newUserDataTC = (email: string, password: string, rememberMe: boolean) => {\r\n    return (dispatch: Dispatch) => {\r\n        loginAPI.postLogin(email, password, rememberMe)\r\n            .then((res) => {\r\n                dispatch(loginAC(res.data))\r\n            })\r\n            .catch((e) => {\r\n                dispatch(setErrorPageAC(e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console')\r\n                ))\r\n            })\r\n    }\r\n}\r\n\r\nexport default loginReducer\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from \"./login.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../bll/store\";\r\nimport {\r\n    LoginInitialStateType,\r\n    newUserDataTC,\r\n    setErrorPageAC\r\n} from '../../../../bll/reducers/login-reducer';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport SuperInputText from \"../../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../../common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const LoginContainer = () => {\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const dataLogin = useSelector<AppRootStateType, LoginInitialStateType>(state => state.login)\r\n\r\n    useEffect(() => {\r\n        dispatch(setErrorPageAC(''))\r\n    }, [email, password])\r\n\r\n\r\n    if (dataLogin.dataUser !== null) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    const addUserData = () => {\r\n        dispatch(newUserDataTC(email, password, rememberMe))\r\n    }\r\n    const addNewEmail = (newEmail: string) => {\r\n        setEmail(newEmail)\r\n    }\r\n    const addNewPassword = (newPassword: string) => {\r\n        setPassword(newPassword)\r\n    }\r\n    const changeRememberMe = (newValue: boolean) => {\r\n        setRememberMe(newValue)\r\n    }\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        addNewEmail(e.currentTarget.value)\r\n    }\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        addNewPassword(e.currentTarget.value)\r\n    }\r\n    const onChangeRememberMeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        changeRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n    return (\r\n        <div className={s.formLogin}>\r\n            <h1>IT-Incubator</h1>\r\n            <h2>Sign in</h2>\r\n            <div className={s.inputArea}>\r\n                Email:\r\n                <SuperInputText type={'email'}\r\n                                setError={x => x}\r\n                                onChange={onChangeEmailHandler}\r\n                />\r\n                Password:\r\n                <SuperInputText type={'password'}\r\n                                setError={x => x}\r\n                                onChange={onChangePasswordHandler}\r\n                />\r\n                <div className={s.rememberMeArea}>\r\n                    <SuperCheckbox type={'checkbox'}\r\n                                   onChange={onChangeRememberMeHandler}\r\n                    />\r\n                    Remember me\r\n                </div>\r\n                <span>{dataLogin.errorMessage}</span>\r\n            </div>\r\n            <NavLink to={'/forgot'} className={s.linkForgot}>Forgot Password</NavLink>\r\n            <button onClick={addUserData}>\r\n                Login\r\n            </button>\r\n            <p>Don't have an account?</p>\r\n\r\n            {/*<Login/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Header} from \"./main/ui/header/Header\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Profile} from \"./main/ui/components/profile/Profile\";\r\nimport {ForgotPassword} from \"./main/ui/components/auth/forgotPassword/ForgotPassword\";\r\nimport {SetPassword} from \"./main/ui/components/auth/setPassword/SetPassword\";\r\nimport {Test} from \"./main/ui/components/test/Test\";\r\nimport {RegisterContainer} from \"./main/ui/components/auth/register/RegisterContainer\";\r\nimport {LoginContainer} from \"./main/ui/components/auth/login/LoginContainer\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <div className=\"App-content\">\r\n                <Switch>\r\n                    <Route path='/login' render={() => <LoginContainer/>}/>\r\n                    <Route path='/registration' render={() => <RegisterContainer/>}/>\r\n                    <Route path='/profile' render={() => <Profile/>}/>\r\n                    <Route path='/forgot' render={() => <ForgotPassword/>}/>\r\n                    <Route path='/new-password' render={() => <SetPassword/>}/>\r\n                    <Route path='/test' render={() => <Test/>}/>\r\n                    <Route path='/404' render={() => <div>404 PAGE NOT FOUND</div>}/>\r\n                    <Route path='*' render={() => <Redirect to={'/404'}/>}/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export type ProfileActionType = ReturnType<typeof profileAC>\r\nexport type ProfileInitialStateType = typeof initialState\r\n\r\nlet initialState = {}\r\n\r\nconst profileReducer = (state = initialState, action: ProfileActionType): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case '':\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const profileAC = () => ({type: ''} as const)\r\n\r\nexport default profileReducer\r\n","export type ForgotPasswordActionType = ReturnType<typeof forgotPasswordAC>\r\nexport type ForgotPasswordInitialStateType = typeof initialState\r\n\r\nlet initialState = {}\r\n\r\nconst forgotPasswordReducer = (state = initialState, action: ForgotPasswordActionType): ForgotPasswordInitialStateType => {\r\n    switch (action.type) {\r\n        case '':\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const forgotPasswordAC = () => ({type: ''} as const)\r\n\r\nexport default forgotPasswordReducer\r\n","export type SetPasswordActionType = ReturnType<typeof setPasswordAC>\r\nexport type SetPasswordInitialStateType = typeof initialState\r\n\r\nlet initialState = {}\r\n\r\nconst setPasswordReducer = (state = initialState, action: SetPasswordActionType): SetPasswordInitialStateType => {\r\n    switch (action.type) {\r\n        case '':\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setPasswordAC = () => ({type: ''} as const)\r\n\r\nexport default setPasswordReducer\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport loginReducer, {LoginActionType} from \"./reducers/login-reducer\";\r\nimport registerReducer, {RegisterActionType} from \"./reducers/register-reducer\";\r\nimport profileReducer, {ProfileActionType} from \"./reducers/profile-reducer\";\r\nimport forgotPasswordReducer, {ForgotPasswordActionType} from \"./reducers/forgotPassword-reducer\";\r\nimport setPasswordReducer, {SetPasswordActionType} from \"./reducers/setPassword-reducer\";\r\n\r\n\r\nexport let rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    profile: profileReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    setPassword: setPasswordReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppActionsType = LoginActionType\r\n    | RegisterActionType\r\n    | ProfileActionType\r\n    | ForgotPasswordActionType\r\n    | SetPasswordActionType\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionsType>\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./main/bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}